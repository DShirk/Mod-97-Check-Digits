<!DOCTYPE html>
<html>
<head>
<style>
p {
style=“font-family: play, sans-serif;color:#003366;line-heigh:1.25em;test-align:justify;”;
font-size: 14px;
}
</style>
</head>
<body>

<hr></hr>
<p>"Enter your organization's LEI of 20 characters"</p>
<input id="LEI" size="22">
<br></br>
<p>Enter a comma delimited list of Loan Numbers of up to 23 characters each. Each Loan Number will be appended to the LEI and receive its check digits.</p>
<textarea id="LoanNums" cols="48" rows="20"></textarea>

<button type="button" onclick="UliAppendCheckDigit()">Append</button>
<p id="uliAppendCheckDigit" style="font-family:jura"; font-size: 24px></p>


<hr></hr>
<p>Enter a ULI of 45 characters to validate its ULI check digits.</p>
<input id="ULI" size="45">

<button type="button" onclick="UliCheckDigitValidator()">Validate</button>
<p id="uliCheckDigitValidator"></p>

<hr></hr>
<p>Additional Calculation Details (for last loan number):</p>
<p id="uliReplaceAlphaText"></p> <p id="uliReplaceAlpha"></p>
<p id="longMod97"></p>
<p id="uliCheckDigits"></p>

<script>
//CFPB supplied sample LEI + Loan Id in Reg. C Appendix C describing method of calculation: "10Bx939c5543TqA1144M999143X" which should result in "38" as check digits appended at end to be "10Bx939c5543TqA1144M999143X38". Additionally 549300410TULSMMGDX9251506124 should have check digit of "58".

function UliReplaceAlpha(strULIToCheck) {
	var toRemove = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"];
	var toReplace = ["10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35"];
	try {
		var strValToCheck = strULIToCheck;
		for (i = 0; i < 52; i++) {
		strValToCheck = strValToCheck.split(toRemove[i]).join(toReplace[i]);
		}
 
		if (isNaN(strValToCheck)) throw "Invalid characters. The HMDA ULI may only contain numbers and letters. No special characters. Letters may be any case.";
  
		document.getElementById("uliReplaceAlphaText").innerHTML = "The tested value with alpha characters replaced was: " + strValToCheck;
     
	}
	catch(err) {
		document.getElementById("uliReplaceAlphaText").innerHTML = "Error: " + err;
	}
	return strValToCheck;
}

function LongMod97(numToCheck) {
	var longMod97;
	var valTest = 0;

	try {
	//if (isNaN(strNumToCheck)) throw "Value tested is not numeric. Mod 97 must be run on numeric values only.";
		var strNumToCheck = String(numToCheck);
		while (Number(strNumToCheck) >= 97) {
			if (strNumToCheck.length > 7) {
			  valTest = Number(strNumToCheck.slice(0, 7));
				  strNumToCheck = strNumToCheck.slice(7 - strNumToCheck.length);
			}
			else {
			  valTest = Number(strNumToCheck);
			  strNumToCheck = "";
			}
			longMod97 = valTest % 97; 
			strNumToCheck = String(longMod97) + strNumToCheck;
		}
	    
		document.getElementById("longMod97").innerHTML = "The mod 97 result of the tested value is: " + strNumToCheck;

	}
	catch(err) {
		document.getElementById("longMod97").innerHTML = "Error: " + err;
	}
	return strNumToCheck;
}


function UliCheckDigit(strULIToCheck) {

	 var uliCheckDigit;
	 try {
		uliCheckDigit = String(98 - LongMod97(UliReplaceAlpha(strULIToCheck) + "00"));
	  
		if (uliCheckDigit < 10) {
			var strULICheckDigit = "0" + uliCheckDigit;
		}
		else {
			strULICheckDigit = String(uliCheckDigit);
		}

		document.getElementById("uliCheckDigits").innerHTML = "The ULI check digits for the tested value are: " + strULICheckDigit;
	}
	catch(err) {
		document.getElementById("uliCheckDigits").innerHTML = "Error: " + err;
	}
	return strULICheckDigit;
}


function UliAppendCheckDigit() {
	var errAdd = ""; 
	var strULICheckDigitAppendedList = "";
	document.getElementById("uliReplaceAlphaText").innerHTML = "";
	document.getElementById("longMod97").innerHTML = "";
	document.getElementById("uliCheckDigits").innerHTML = "";
	document.getElementById("uliAppendCheckDigit").innerHTML = "";
	document.getElementById("uliCheckDigitValidator").innerHTML = "";
	document.getElementById("ULI").value = "";
	
	try {
		strLEIToCheck = document.getElementById("LEI").value;
		if (strLEIToCheck.indexOf(" ") != -1) {
			strLEIToCheck = strLEIToCheck.replace(/ /g,"");
			errAdd = "<br>WARNING: LEI value entered was stripped of spaces.";
		}
		if (strLEIToCheck.length > 20) throw "LEI value entered is more than 20 characters. It is too long!";
		if (strLEIToCheck.length < 20) throw "LEI value entered is less than 20 characters. It is too short!";
		var strLEIMod97 =  LongMod97(UliReplaceAlpha(strLEIToCheck));
		 
		strLoanNumsToCheck = document.getElementById("LoanNums").value;
		//strip spaces, carriage returns, and final comma if any
		strLoanNumsToCheck = strLoanNumsToCheck.replace(/ /g,"");
		strLoanNumsToCheck = strLoanNumsToCheck.replace(/[\n\r]+/g,"");
		if (strLoanNumsToCheck.slice(-1) == ",") strLoanNumsToCheck = strLoanNumsToCheck.slice(0,strLoanNumsToCheck.length -1);
		  
		var strLoanNums_array = strLoanNumsToCheck.split(',');
		     
		for (var i = 0; i < strLoanNums_array.length; i++) {
		  
			strLoanNum = strLoanNums_array[i];
		  
			if (strLoanNum.length > 23) {
				strULICheckDigitAppendedList = strULICheckDigitAppendedList + ((i >0) ? ", " : "") + "Error: Item " + (i + 1) + " is > 23 characters";
			}
			else {
				var strULICheckDigitAppended = strLEIToCheck + strLoanNum + UliCheckDigit(strLEIMod97 + strLoanNum);

				if (LongMod97(UliReplaceAlpha(strULICheckDigitAppended)) == 1) {
					strULICheckDigitAppendedList = strULICheckDigitAppendedList + ((i >0) ? ", " : "") + strULICheckDigitAppended;
				}
				else {
					strULICheckDigitAppendedList = strULICheckDigitAppended + ((i >0) ? ", " : "") + "Error: Item " + (i + 1) + " FAILED INTERNAL VALIDATION" + errAdd;
				}
				document.getElementById("uliAppendCheckDigit").innerHTML = "ULIs with appended check digits are: " + strULICheckDigitAppendedList;
				
			}
		}
	}
	catch(err) {
		document.getElementById("uliAppendCheckDigit").innerHTML = "Error: " + err + errAdd;
	}
	return strULICheckDigitAppended;
}


function UliCheckDigitValidator() {
	document.getElementById("uliReplaceAlphaText").innerHTML = "";
	document.getElementById("longMod97").innerHTML = "";
	document.getElementById("uliCheckDigits").innerHTML = "";
	document.getElementById("uliAppendCheckDigit").innerHTML = "";
	document.getElementById("uliCheckDigitValidator").innerHTML = "";
	document.getElementById("LEI").value = "";
	document.getElementById("LoanNums").value = "";
	
	try {  
		strULIToCheck = document.getElementById("ULI").value;
		if (strULIToCheck.indexOf(" ") != -1) throw "Tested ULI's check digits are: INVALID! <br>Value entered contained spaces.";
		if (strULIToCheck.length > 45) throw "Value entered is more than 45 characters. It is too long!";
		// if (strULIToCheck.length < 23) throw "Value entered is less than 23 characters (LEI = 20, CheckDigit =2, leaving no digits for loan number). It is too short!";
	  	strChkDig = strULIToCheck.slice(-2);
		if (LongMod97(UliReplaceAlpha(strULIToCheck)) == 1 && strChkDig !== "99" && strChkDig !== "00" && strChkDig !== "01") {
			document.getElementById("uliCheckDigitValidator").innerHTML = "Tested ULI's check digits are: VALID";
		}
		else {
			document.getElementById("uliCheckDigitValidator").innerHTML = "Tested ULI's check digits are: INVALID";
		}
	}
	catch(err) {
		document.getElementById("uliCheckDigitValidator").innerHTML = "Error: " + err;
	}
}
</script>

</body>
</html>
